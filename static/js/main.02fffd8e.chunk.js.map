{"version":3,"sources":["components/Home.jsx","components/ActivityForm.jsx","components/Exam.jsx","components/Routing.jsx","App.js","reportWebVitals.js","index.js"],"names":["Home","this","props","activities","length","className","value","onClick","changeActivities","React","Component","ActivityForm","activity","changeValue","changeQuestions","Exam","valorPregunta","toFixed","Routing","state","page","changePage","bind","event","target","setState","activitiesArray","push","pop","splited","split","showPage","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02fffd8e.chunk.js","sourcesContent":["import React from 'react';\n\nclass Home extends React.Component {\n    render() {\n        return(\n            <div>\n                <p>Elije el numero de secciones del examen</p>\n                <h3>Numero de secciones: {this.props.activities.length}</h3>\n                {this.props.activities.length !== 0 ? <button className=\"button\" value=\"remove\" onClick={this.props.changeActivities} >Quitar seccion</button> : null}\n                <button className=\"button\" value=\"add\" onClick={this.props.changeActivities}>AÃ±adir seccion</button>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React from 'react';\n\nimport './ActivityFormStyle.css';\n\nclass ActivityForm extends React.Component {\n    render() {\n        return(\n            <div className=\"activity-form\">\n                <h3>Actividad {this.props.activity[0] + 1}</h3>\n                <div className=\"activity-form-field\">\n                    <p>Valor actividad: {this.props.activity[1]}</p>\n                    <button value={`remove ${this.props.activity[0]}`} onClick={this.props.changeValue}>-</button>\n                    <button value={`add ${this.props.activity[0]}`} onClick={this.props.changeValue}>+</button>\n                </div>\n                <div className=\"activity-form-field\">\n                    <p>Numero de preguntas: {this.props.activity[2]}</p>\n                    <button value={`remove ${this.props.activity[0]}`} onClick={this.props.changeQuestions}>-</button>\n                    <button value={`add ${this.props.activity[0]}`} onClick={this.props.changeQuestions}>+</button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ActivityForm;","import React from 'react';\n\nclass Exam extends React.Component {\n    render() {\n        let valorPregunta = this.props.activity[1] / this.props.activity[2];\n        return(\n            <div>\n                <h3>Actividad {this.props.activity[0] + 1}</h3>\n                <p>{this.props.activity[2]} preguntas</p>\n                <p>Valor de cada pregunta: {valorPregunta.toFixed(2)}</p>\n            </div>\n        );\n    }\n}\n\nexport default Exam;","import React from 'react';\nimport Home from './Home';\nimport ActivityForm from './ActivityForm';\nimport Exam from './Exam';\n\nclass Routing extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: 0,\n            activities: []\n        }\n\n        this.changePage = this.changePage.bind(this);\n        this.changeActivities = this.changeActivities.bind(this);\n        this.changeValue = this.changeValue.bind(this);\n        this.changeQuestions = this.changeQuestions.bind(this);\n    }\n\n    // Renderiza las diferentes actividades\n    changePage(event) {\n        if(event.target.value === \"next\" && this.state.page < 2) {\n            this.setState({\n                page: this.state.page + 1\n            });\n        } else if(event.target.value === \"back\") {\n            this.setState({\n                page: this.state.page - 1\n            });\n        }\n    }\n\n    // Cambia el numero de secciones en el examen\n    changeActivities(event) {\n        let activitiesArray = this.state.activities;\n\n        if(event.target.value === \"add\") {\n            activitiesArray.push([this.state.activities.length, 0,0]);\n            this.setState({\n                activities: activitiesArray\n            });\n        } else if(event.target.value === \"remove\") {\n            activitiesArray.pop();\n            this.setState({\n                activities: activitiesArray\n            });\n        }\n    }\n\n    // Cambia el valor de una seccion\n    changeValue(event) {\n        let splited = event.target.value.split(\" \");\n\n        let activitiesArray = this.state.activities;\n\n        if (splited[0] === \"add\") {\n            activitiesArray[splited[1]][1]++;\n        } else if (splited[0] === \"remove\") {\n            activitiesArray[splited[1]][1]--;\n        }\n\n        this.setState({\n            activities: activitiesArray\n        });\n\n    }\n\n    // Cambia el numero de preguntas en una seccion\n    changeQuestions(event) {\n        let splited = event.target.value.split(\" \");\n\n        let activitiesArray = this.state.activities;\n\n        if (splited[0] === \"add\") {\n            activitiesArray[splited[1]][2]++;\n        } else if (splited[0] === \"remove\") {\n            activitiesArray[splited[1]][2]--;\n        }\n\n        this.setState({\n            activities: activitiesArray\n        });\n    }\n\n    render() {\n        let showPage;\n        switch(this.state.page) {\n            case 0:\n                showPage = <Home activities={this.state.activities} changeActivities={this.changeActivities} />;\n                break;\n            case 1: showPage = this.state.activities.length === 0 \n                            ? <p>Vuelve atras y elige el numero de secciones</p> \n                            : this.state.activities.map((activity) => \n                                    (<ActivityForm \n                                        activity={activity}\n                                        changeValue={this.changeValue}\n                                        changeQuestions={this.changeQuestions} \n                                    />)\n                                );\n                break;\n            case 2: showPage = this.state.activities.length === 0 \n                            ? <p>Vuelve atras y asigna valores</p> \n                            : this.state.activities.map((activity) => \n                                    (<Exam activity={activity} />)\n                                );\n                break;\n            default:\n                break;\n        }\n        return(\n            <div>\n                <h1>Maestra App</h1>\n                {this.state.page !== 0 ? <button className=\"button\" value=\"back\" onClick={this.changePage}>Volver</button> : null}\n                {this.state.page !== 2 ? <button className=\"button\" value=\"next\" onClick={this.changePage}>Siguiente</button> : null}\n                {showPage}\n            </div>\n        );\n    }\n}\n\nexport default Routing;","import Routing from './components/Routing';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routing />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}